enum WishlistType {
  PUBLIC
  PRIVATE
}

type Cart {
  user: User! @goField(forceResolver: true)
  product: Product! @goField(forceResolver: true)
  quantity: Int!
  notes: String!
}

type Wishlist {
  id: ID!
  title: String!
  type: WishlistType!
  user: User! @goField(forceResolver: true)
  items: [WishlistItem!]! @goField(forceResolver: true)
}

type WishlistItem {
  wishlist: Wishlist! @goField(forceResolver: true)
  product: Product! @goField(forceResolver: true)
}

type WishlistFollowing{
  wishlist: Wishlist! @goField(forceResolver: true)
  user: User! @goField(forceResolver: true)
}

type WishlistComment{
  id: ID!
  date: Time!
  content: String!
  wishlist: Wishlist! @goField(forceResolver: true)
  user: User! @goField(forceResolver: true)
}

extend type Query {
  cart(productID: ID!): Cart! @auth
  carts: [Cart!]! @auth

  wishlist(id: ID!): Wishlist!
  wishlists: [Wishlist!]! @auth
  publicWishlists: [Wishlist!]!
  followedWishlists: [Wishlist!]! @auth
  wishlistFollowers(wishlistId: ID!): [User!]!
  wishlistComments(wishlistId: ID!): [WishlistComment!]!
}

extend type Mutation {
  createCart(productID: ID!, quantity: Int!, notes: String!): Cart! @auth
  updateCart(productID: ID!, quantity: Int!, notes: String!): Cart! @auth
  deleteCart(productID: ID!): Boolean! @auth

  createWishlistComment(wishlistId: ID!, content: String): WishlistComment! @auth
  followWishlist(wishlistId: ID!): Wishlist! @auth
  createWishlist(title: String!, type: WishlistType!): Wishlist! @auth
  createWishlistItem(wishlistId: ID!, productId: ID!): WishlistItem! @auth
  updateWishlist(id: ID!, title: String!, type: WishlistType!): Wishlist! @auth
  deleteWishlist(id: ID!): Boolean! @auth
  deleteWishlistItem(wishlistId: ID!, productId: ID!): Boolean! @auth
  duplicateWishlistItems(sourceId: ID!, destinationId: ID!): Wishlist! @auth
}