package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/jxsr12/oldegg/graph/model"
)

// Users is the resolver for the Users field.
func (r *chatResolver) Users(ctx context.Context, obj *model.Chat) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - Users"))
}

// Messages is the resolver for the Messages field.
func (r *chatResolver) Messages(ctx context.Context, obj *model.Chat) ([]*model.Message, error) {
	panic(fmt.Errorf("not implemented: Messages - Messages"))
}

// User is the resolver for the User field.
func (r *messageResolver) User(ctx context.Context, obj *model.Message) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - User"))
}

// Chat is the resolver for the Chat field.
func (r *messageResolver) Chat(ctx context.Context, obj *model.Message) (*model.Chat, error) {
	panic(fmt.Errorf("not implemented: Chat - Chat"))
}

// ImageURL is the resolver for the ImageURL field.
func (r *messageResolver) ImageURL(ctx context.Context, obj *model.Message) (*string, error) {
	panic(fmt.Errorf("not implemented: ImageURL - ImageURL"))
}

// Chat returns ChatResolver implementation.
func (r *Resolver) Chat() ChatResolver { return &chatResolver{r} }

// Message returns MessageResolver implementation.
func (r *Resolver) Message() MessageResolver { return &messageResolver{r} }

type chatResolver struct{ *Resolver }
type messageResolver struct{ *Resolver }
